name: Discussion Context Capsule (Gemini â†’ Claude Code)
on:
  discussion:
    types: [created, edited]
  discussion_comment:
    types: [created]

permissions:
  contents: read
  discussions: write

jobs:
  build-capsule:
    if: contains(github.event.discussion.category.name, 'cursor-blockers') || contains(github.event.comment.body, '/capsule')
    runs-on: ubuntu-latest
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update && sudo apt-get install -y jq
      - name: Build raw context
        run: |
          bash tools/build_discussion_context.sh "${{ github.event.discussion.number }}" "/tmp/raw.md"
      - name: Summarize with Gemini
        run: |
          bash tools/summarize_with_gemini.sh "/tmp/raw.md" "/tmp/context-capsule.md"
      - name: Post capsule back
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          DISC_ID=$(gh api graphql -f query='
            query($o:String!,$r:String!,$n:Int!){
              repository(owner:$o, name:$r){ discussion(number:$n){ id }}}' \
            -F o='${{ github.repository_owner }}' -F r='${{ github.event.repository.name }}' \
            -F n='${{ github.event.discussion.number }}' --jq '.data.repository.discussion.id')
          gh api graphql -f query='
            mutation($id:ID!,$body:String!){
              addDiscussionComment(input:{discussionId:$id, body:$body}){ comment { url }}}' \
            -F id="$DISC_ID" -F body="$(cat /tmp/context-capsule.md)"
